name: Golden Image Pipeline

on:
  repository_dispatch:
    types: [main-update, component1-update]
    
permissions:
  contents: write  
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Deploy New Version (Stub)
        run: echo "Deployed"

  test:
    needs: deploy
    runs-on: ubuntu-latest
    outputs:
      test_result: ${{ steps.test-step.outputs.result }}  # Store test result as output
    steps:
      - name: Run Tests (Stub)
        id: test-step  # Define step ID
        run: |
          if [ $((RANDOM % 2)) -eq 0 ]; then
            echo "Tests Passed"
            echo "result=pass" >> $GITHUB_ENV
            echo "::set-output name=result::pass"  # Store output
          else
            echo "Tests Failed"
            echo "result=fail" >> $GITHUB_ENV
            echo "::set-output name=result::fail"  # Store output
          fi

  update-golden-state:
    needs: test
    if: needs.test.outputs.test_result == 'pass'  # Reference the correct output
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Update Golden Image JSON
        run: python update_state.py ${{ github.event.client_payload.component }} ${{ github.event.client_payload.version }}

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add golden-state.json
          git commit -m "Updated golden state for ${{ github.event.client_payload.component }} to ${{ github.event.client_payload.version }}"
          git push origin main
